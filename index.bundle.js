"use strict";(self.webpackChunkleaderboard=self.webpackChunkleaderboard||[]).push([[826],{405:()=>{const e=document.querySelector(".refresh"),t=(document.querySelector(".add-btn"),document.querySelector(".form")),s=document.querySelector(".score-list"),a=document.querySelector(".top-scorer"),n=document.querySelector(".message"),r=document.querySelector(".game-title"),o="https://us-central1-js-capstone-backend.cloudfunctions.net/api/",c=class{static createGame=async e=>{const t=await fetch(`${o}games`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});return await t.json()};static getScores=async e=>{const t=await fetch(`${o}games/${e}/scores`);return await t.json()};static createGameScore=async(e,t)=>{const s=await fetch(`${o}games/${e}/scores`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});return await s.json()}},[l,i]=t.elements,u={name:"House of Dragons"};r.innerHTML=`${u.name} - Leaderboard`,document.addEventListener("DOMContentLoaded",(()=>{JSON.parse(localStorage.getItem("game"))??c.createGame(u).then((e=>{const t=e.result.split(" ")[3],s=new class{constructor(e,t){this.id=t,this.name=e}}(u.name,t);localStorage.setItem("game",JSON.stringify(s))})),d()})),t.addEventListener("submit",(e=>{e.preventDefault();const s={user:l.value,score:Number(i.value)},a=JSON.parse(localStorage.getItem("game"));c.createGameScore(a.id,s).then((e=>{n.style.display="block",n.innerHTML=e.result,setTimeout((()=>{n.style.display="none"}),5e3),t.reset(),d()}))})),e.addEventListener("click",(()=>{d(),s.style.display="block"}));const d=async()=>{const e=JSON.parse(localStorage.getItem("game")),t=await c.getScores(e.id);if(t.result.length>0){const e=t.result.reduce(((e,t)=>e.score>t.score?e:t));a.innerHTML=`\n    <span>${e.user}</span>\n    <span>${e.score} pts</span>\n  `}else a.innerHTML='\n    <p class="mb-0">No Score available yet</p>\n  ';s.innerHTML=t.result.map(((e,t)=>`\n      <li class="score-item list-group-item d-flex justify-content-between align-items-center">\n        <span>\n          ${t+1}\n        </span>\n       ${e.user}<span class="badge bg-primary rounded-pill">${e.score}</span></li>`)).join(""),s.style.display="block"}}},e=>{e(e.s=405)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,